runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(scanstatistics)
library(ggplot2)
library(dplyr)
#library(sp)
#library(magrittr)
library(stringr)
library(INLA)
library(Rcpp)
library(readxl)
#library(RColorBrewer) ??
#library(dplyr)
#library(reshape2)
#library(dygraphs)
#library(xts)
#library(ggrepel)
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyEffects)
library(DT)
library(leaflet)
library(tidyverse)
library(hrbrthemes)
library(plotly)
library(sf)
library(ps)
library(spdep) #######?###########
library(kableExtra)
library(viridis)
#library(haven)
library(ggbeeswarm)
#library(stringr)
################################################
#options(OutDec= ".") #Muda de ponto para virgula nos decimais!
## here deve estar localizado na pasta principal onde esta o aplicativo Shiny (arquivo global.r)
localarquivo <- function(x){
str_c(here::here(),"/",x)
}
source(str_c(here::here(),"/","global.r"),encoding = "UTF-8")
gerar_banco_modelo_aux <- function(cid2){
banco_aux <- banco_cid %>%
filter(cid_num %in% cid2) %>%
group_by(ANO_NASC,CODMUNRES) %>%
summarise(nascidos_vivos_anomalia = n())
banco_aux2 <- banco_nascimentos %>%
left_join(banco_aux,by=c("CODMUNRES","ANO_NASC"))
banco_aux2 <- banco_aux2 %>%
replace_na(list(nascidos_vivos_anomalia = 0))
#mutate(prevalencia = nascidos_vivos_anomalia/numero_nascidos_vivos*10^4) %>%
#select(NOMEMUN = NOMEMUN,numero_nascidos_vivos,nascidos_vivos_anomalia)
linha_pinto_bandeira  <- banco_aux2[banco_aux2$NOMEMUN == "Pinto Bandeira",]
num_linha_bento_goncalves <- which(banco_aux2$NOMEMUN == "Bento Gonçalves")
banco_aux2[num_linha_bento_goncalves,4:5] = banco_aux2[num_linha_bento_goncalves,4:5] + linha_pinto_bandeira[,4:5]
banco_aux2 <- banco_aux2 %>%
filter(NOMEMUN != "Pinto Bandeira")
return(banco_aux2)
}
mapa_rs_modelo <- sf::st_read(str_c(here::here(),"/shapefiles/43MUE250GC_SIR_2010.shp"), quiet = TRUE) %>%
mutate(municipio= str_to_lower(NM_MUNICIP))
linha_lagoa_dos_patos=  which(mapa_rs_modelo$municipio=="lagoa dos patos")
linha_lagoa_mirin=  which(mapa_rs_modelo$municipio=="lagoa mirim")
mapa_rs_modelo  = mapa_rs_modelo[-c(linha_lagoa_dos_patos, linha_lagoa_mirin), ]
lista_completa <- list()
banco_modelo <- gerar_banco_modelo_aux(1)
counts <- banco_modelo  %>%
select(1,3,5) %>%
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "nascidos_vivos_anomalia")
banco_modelo$municipio <- str_to_lower(banco_modelo$NOMEMUN)
banco_modelo_aux <- banco_modelo %>%
group_by(CODMUNRES) %>%
summarise(municipio = str_to_lower(unique(NOMEMUN)))
banco_modelo_mapa <-  banco_modelo_aux %>%
left_join(mapa_rs_modelo,by=c("municipio"))%>%
select(-3,-4)
banco_modelo_mapa <- banco_modelo_mapa %>%
arrange(CODMUNRES)
banco_modelo_mapa_sf  = st_as_sf(banco_modelo_mapa)
banco_modelo_mapa_sf  <- st_transform(banco_modelo_mapa_sf )
nb <- poly2nb(banco_modelo_mapa_sf)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = localarquivo("modelagem/Scan/map.adj"))
proporcao_media <- banco_modelo %>%
group_by(ANO_NASC) %>%
summarise(valor = sum(nascidos_vivos_anomalia)/sum(numero_nascidos_vivos))
banco_modelo$valor_esperado <- banco_modelo$numero_nascidos_vivos*proporcao_media$valor[banco_modelo$ANO_NASC - 2009]
ebp_baselines <- banco_modelo  %>%
#df_to_matrix(value_col = "mu")
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "valor_esperado")
set.seed(1)
poisson_result <- scan_eb_poisson(counts = counts,
zones = g$nbs , #max_duration = 3,
baselines = ebp_baselines,
n_mcsim = 9999)
print(poisson_result)
banco_modelo <- gerar_banco_modelo_aux(1)
counts <- banco_modelo  %>%
select(1,3,5) %>%
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "nascidos_vivos_anomalia")
banco_modelo$municipio <- str_to_lower(banco_modelo$NOMEMUN)
banco_modelo_aux <- banco_modelo %>%
group_by(CODMUNRES) %>%
summarise(municipio = str_to_lower(unique(NOMEMUN)))
banco_modelo_mapa <-  banco_modelo_aux %>%
left_join(mapa_rs_modelo,by=c("municipio"))%>%
select(-3,-4)
banco_modelo_mapa <- banco_modelo_mapa %>%
arrange(CODMUNRES)
banco_modelo_mapa_sf  = st_as_sf(banco_modelo_mapa)
banco_modelo_mapa_sf  <- st_transform(banco_modelo_mapa_sf )
nb <- poly2nb(banco_modelo_mapa_sf)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = localarquivo("modelagem/Scan/map.adj"))
g <- inla.read.graph(filename = localarquivo("map.adj"))
nb <- poly2nb(banco_modelo_mapa_sf)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = localarquivo("map.adj"))
proporcao_media <- banco_modelo %>%
group_by(ANO_NASC) %>%
summarise(valor = sum(nascidos_vivos_anomalia)/sum(numero_nascidos_vivos))
banco_modelo$valor_esperado <- banco_modelo$numero_nascidos_vivos*proporcao_media$valor[banco_modelo$ANO_NASC - 2009]
ebp_baselines <- banco_modelo  %>%
#df_to_matrix(value_col = "mu")
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "valor_esperado")
set.seed(1)
poisson_result <- scan_eb_poisson(counts = counts,
zones = g$nbs , #max_duration = 3,
baselines = ebp_baselines,
n_mcsim = 9999)
print(poisson_result)
top5 <- top_clusters(poisson_result, zones, k = 5, overlapping = FALSE)
top5 <- top_clusters(poisson_result, g$nbs, k = 5, overlapping = FALSE)
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = zones) %>%
purrr::map(function(x) counties[x])
top5$zone
library( purrr)
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = zones) %>%
purrr::map(function(x) counties[x])
top5 <- top_clusters(poisson_result, zones = g$nbs, k = 5, overlapping = FALSE)
top5$zone
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = zones) %>%
purrr::map(function(x) counties[x])
top5
top_clusters(poisson_result, zones = g$nbs, k = 5, overlapping = FALSE)
poisson_result
top5$
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = zones) %>%
purrr::map(function(x) counties[x])
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = zones)
?purrr::map
top5$
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = g$nbs) %>%
purrr::map(function(x) counties[x])
top5$
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = g$nbs) %>%
purrr::map(function(x) banco_modelo$municipio[x])
# Add the counties corresponding to the zones as a column
top5 %<>% mutate(counties = top5_counties)
# Add the counties corresponding to the zones as a column
top5 %>% mutate(counties = top5_counties)
top5
top5 <- top_clusters(poisson_result, zones = g$nbs, k = 5, overlapping = FALSE)
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = g$nbs) %>%
purrr::map(function(x) banco_modelo_mapa$municipio[x])
# Add the counties corresponding to the zones as a column
top5 %>% mutate(counties = top5_counties)
# Add the counties corresponding to the zones as a column
top5 %>% mutate(counties = top5_counties)
#library(profvis)
#library(Rcpp)
library(readxl)
#library(RColorBrewer) ??
#library(dplyr)
#library(reshape2)
#library(dygraphs)
#library(xts)
#library(ggrepel)
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyEffects)
library(DT)
library(leaflet)
library(tidyverse)
library(hrbrthemes)
library(plotly)
library(sf)
library(ps)
library(spdep) #######?###########
library(kableExtra)
library(viridis)
#library(haven)
library(ggbeeswarm)
#library(stringr)
################################################
#options(OutDec= ".") #Muda de ponto para virgula nos decimais!
library(scanstatistics)
library(ggplot2)
library(dplyr)
#library(sp)
#library(magrittr)
library(stringr)
library(INLA)
#library(rlist)
# Add the counties corresponding to the zones as a column
top5 %>% mutate(counties = top5_counties)
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = g$nbs) %>%
purrr::map(function(x) banco_modelo_mapa$municipio[x])
top5 <- top_clusters(poisson_result, zones = g$nbs, k = 5, overlapping = FALSE)
banco_modelo <- gerar_banco_modelo_aux(1)
## here deve estar localizado na pasta principal onde esta o aplicativo Shiny (arquivo global.r)
localarquivo <- function(x){
str_c(here::here(),"/",x)
}
source(str_c(here::here(),"/","global.r"),encoding = "UTF-8")
gerar_banco_modelo_aux <- function(cid2){
banco_aux <- banco_cid %>%
filter(cid_num %in% cid2) %>%
group_by(ANO_NASC,CODMUNRES) %>%
summarise(nascidos_vivos_anomalia = n())
banco_aux2 <- banco_nascimentos %>%
left_join(banco_aux,by=c("CODMUNRES","ANO_NASC"))
banco_aux2 <- banco_aux2 %>%
replace_na(list(nascidos_vivos_anomalia = 0))
#mutate(prevalencia = nascidos_vivos_anomalia/numero_nascidos_vivos*10^4) %>%
#select(NOMEMUN = NOMEMUN,numero_nascidos_vivos,nascidos_vivos_anomalia)
linha_pinto_bandeira  <- banco_aux2[banco_aux2$NOMEMUN == "Pinto Bandeira",]
num_linha_bento_goncalves <- which(banco_aux2$NOMEMUN == "Bento Gonçalves")
banco_aux2[num_linha_bento_goncalves,4:5] = banco_aux2[num_linha_bento_goncalves,4:5] + linha_pinto_bandeira[,4:5]
banco_aux2 <- banco_aux2 %>%
filter(NOMEMUN != "Pinto Bandeira")
return(banco_aux2)
}
banco_modelo <- gerar_banco_modelo_aux(1)
counts <- banco_modelo  %>%
select(1,3,5) %>%
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "nascidos_vivos_anomalia")
banco_modelo$municipio <- str_to_lower(banco_modelo$NOMEMUN)
banco_modelo_aux <- banco_modelo %>%
group_by(CODMUNRES) %>%
summarise(municipio = str_to_lower(unique(NOMEMUN)))
banco_modelo_mapa <-  banco_modelo_aux %>%
left_join(mapa_rs_modelo,by=c("municipio"))%>%
select(-3,-4)
banco_modelo_mapa <- banco_modelo_mapa %>%
arrange(CODMUNRES)
banco_modelo_mapa_sf  = st_as_sf(banco_modelo_mapa)
banco_modelo_mapa_sf  <- st_transform(banco_modelo_mapa_sf )
nb <- poly2nb(banco_modelo_mapa_sf)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = localarquivo("map.adj"))
proporcao_media <- banco_modelo %>%
group_by(ANO_NASC) %>%
summarise(valor = sum(nascidos_vivos_anomalia)/sum(numero_nascidos_vivos))
banco_modelo$valor_esperado <- banco_modelo$numero_nascidos_vivos*proporcao_media$valor[banco_modelo$ANO_NASC - 2009]
ebp_baselines <- banco_modelo  %>%
#df_to_matrix(value_col = "mu")
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "valor_esperado")
set.seed(1)
poisson_result <- scan_eb_poisson(counts = counts,
zones = g$nbs , #max_duration = 3,
baselines = ebp_baselines,
n_mcsim = 9999)
print(poisson_result)
lista2 <- banco_modelo_aux %>%
filter(CODMUNRES %in% colnames(counts[,poisson_result$MLC$locations]))
lista2
lista <- banco_modelo_aux %>%
filter(CODMUNRES %in% colnames(counts[,poisson_result$MLC$locations]))
top5 <- top_clusters(poisson_result, zones = g$nbs, k = 5, overlapping = FALSE)
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = g$nbs) %>%
purrr::map(function(x) banco_modelo_mapa$municipio[x])
# Add the counties corresponding to the zones as a column
top5 %>% mutate(counties = top5_counties)
?top_clusters
top5 <- top_clusters(poisson_result, zones = g$nbs, k = 5)
library(scanstatistics)
library(ggplot2)
library(dplyr)
#library(sp)
#library(magrittr)
library(stringr)
library(INLA)
#library(rlist)
top_clusters(poisson_result, zones = g$nbs, k = 5)
top5 <- top_clusters(poisson_result, zones = g$nbs, k = 5)
top5$
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = g$nbs) %>%
purrr::map(function(x) banco_modelo_mapa$municipio[x])
# Add the counties corresponding to the zones as a column
top5 %>% mutate(counties = top5_counties)
top5 <- top_clusters(poisson_result, zones = g$nbs, k = 5,overlapping = TRUE)
top5$
# Find the counties corresponding to the spatial zones of the 5 clusters.
top5_counties <- top5$zone %>%
purrr::map(get_zone, zones = g$nbs) %>%
purrr::map(function(x) banco_modelo_mapa$municipio[x])
# Add the counties corresponding to the zones as a column
top5 %>% mutate(counties = top5_counties)
top5$relrisk
shiny::runApp()
library(scanstatistics)
library(ggplot2)
library(dplyr)
#library(sp)
#library(magrittr)
library(stringr)
#library(sp)
#library(magrittr)
library(stringr)
library(INLA)
## here deve estar localizado na pasta principal onde esta o aplicativo Shiny (arquivo global.r)
localarquivo <- function(x){
str_c(here::here(),"/",x)
}
source(str_c(here::here(),"/","global.r"),encoding = "UTF-8")
gerar_banco_modelo_aux <- function(cid2){
banco_aux <- banco_cid %>%
filter(cid_num %in% cid2) %>%
group_by(ANO_NASC,CODMUNRES) %>%
summarise(nascidos_vivos_anomalia = n())
banco_aux2 <- banco_nascimentos %>%
left_join(banco_aux,by=c("CODMUNRES","ANO_NASC"))
banco_aux2 <- banco_aux2 %>%
replace_na(list(nascidos_vivos_anomalia = 0))
#mutate(prevalencia = nascidos_vivos_anomalia/numero_nascidos_vivos*10^4) %>%
#select(NOMEMUN = NOMEMUN,numero_nascidos_vivos,nascidos_vivos_anomalia)
linha_pinto_bandeira  <- banco_aux2[banco_aux2$NOMEMUN == "Pinto Bandeira",]
num_linha_bento_goncalves <- which(banco_aux2$NOMEMUN == "Bento Gonçalves")
banco_aux2[num_linha_bento_goncalves,4:5] = banco_aux2[num_linha_bento_goncalves,4:5] + linha_pinto_bandeira[,4:5]
banco_aux2 <- banco_aux2 %>%
filter(NOMEMUN != "Pinto Bandeira")
return(banco_aux2)
}
mapa_rs_modelo <- sf::st_read(str_c(here::here(),"/shapefiles/43MUE250GC_SIR_2010.shp"), quiet = TRUE) %>%
mutate(municipio= str_to_lower(NM_MUNICIP))
linha_lagoa_dos_patos=  which(mapa_rs_modelo$municipio=="lagoa dos patos")
linha_lagoa_mirin=  which(mapa_rs_modelo$municipio=="lagoa mirim")
mapa_rs_modelo  = mapa_rs_modelo[-c(linha_lagoa_dos_patos, linha_lagoa_mirin), ]
lista_completa <- list()
i = 1
banco_modelo <- gerar_banco_modelo_aux(i)
counts <- banco_modelo  %>%
select(1,3,5) %>%
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "nascidos_vivos_anomalia")
banco_modelo$municipio <- str_to_lower(banco_modelo$NOMEMUN)
banco_modelo_aux <- banco_modelo %>%
group_by(CODMUNRES) %>%
summarise(municipio = str_to_lower(unique(NOMEMUN)))
banco_modelo_mapa <-  banco_modelo_aux %>%
left_join(mapa_rs_modelo,by=c("municipio"))%>%
select(-3,-4)
banco_modelo_mapa <- banco_modelo_mapa %>%
arrange(CODMUNRES)
banco_modelo_mapa_sf  = st_as_sf(banco_modelo_mapa)
banco_modelo_mapa_sf  <- st_transform(banco_modelo_mapa_sf )
nb <- poly2nb(banco_modelo_mapa_sf)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = localarquivo("modelagem/Scan/map.adj"))
proporcao_media <- banco_modelo %>%
group_by(ANO_NASC) %>%
summarise(valor = sum(nascidos_vivos_anomalia)/sum(numero_nascidos_vivos))
banco_modelo$valor_esperado <- banco_modelo$numero_nascidos_vivos*proporcao_media$valor[banco_modelo$ANO_NASC - 2009]
ebp_baselines <- banco_modelo  %>%
#df_to_matrix(value_col = "mu")
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "valor_esperado")
set.seed(1)
poisson_result <- scan_eb_poisson(counts = counts,
zones = g$nbs , #max_duration = 3,
baselines = ebp_baselines,
n_mcsim = 9999)
print(poisson_result)
lista2 <- banco_modelo_aux %>%
filter(CODMUNRES %in% colnames(counts[,poisson_result$MLC$locations]))
lista2
print(poisson_result)
poisson_result$MLC$relative_risk
poisson_result$max_duration
?scan_eb_poisson
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
poisson_result$MLC$relative_risk
poisson_result$MC_pvalue
runApp()
runApp()
runApp()
runApp()
i = 7
banco_modelo <- gerar_banco_modelo_aux(i)
counts <- banco_modelo  %>%
select(1,3,5) %>%
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "nascidos_vivos_anomalia")
banco_modelo$municipio <- str_to_lower(banco_modelo$NOMEMUN)
library(scanstatistics)
library(ggplot2)
library(dplyr)
#library(sp)
#library(magrittr)
library(stringr)
library(INLA)
#library(rlist)
## here deve estar localizado na pasta principal onde esta o aplicativo Shiny (arquivo global.r)
localarquivo <- function(x){
str_c(here::here(),"/",x)
}
source(str_c(here::here(),"/","global.r"),encoding = "UTF-8")
gerar_banco_modelo_aux <- function(cid2){
banco_aux <- banco_cid %>%
filter(cid_num %in% cid2) %>%
group_by(ANO_NASC,CODMUNRES) %>%
summarise(nascidos_vivos_anomalia = n())
banco_aux2 <- banco_nascimentos %>%
left_join(banco_aux,by=c("CODMUNRES","ANO_NASC"))
banco_aux2 <- banco_aux2 %>%
replace_na(list(nascidos_vivos_anomalia = 0))
#mutate(prevalencia = nascidos_vivos_anomalia/numero_nascidos_vivos*10^4) %>%
#select(NOMEMUN = NOMEMUN,numero_nascidos_vivos,nascidos_vivos_anomalia)
linha_pinto_bandeira  <- banco_aux2[banco_aux2$NOMEMUN == "Pinto Bandeira",]
num_linha_bento_goncalves <- which(banco_aux2$NOMEMUN == "Bento Gonçalves")
banco_aux2[num_linha_bento_goncalves,4:5] = banco_aux2[num_linha_bento_goncalves,4:5] + linha_pinto_bandeira[,4:5]
banco_aux2 <- banco_aux2 %>%
filter(NOMEMUN != "Pinto Bandeira")
return(banco_aux2)
}
mapa_rs_modelo <- sf::st_read(str_c(here::here(),"/shapefiles/43MUE250GC_SIR_2010.shp"), quiet = TRUE) %>%
mutate(municipio= str_to_lower(NM_MUNICIP))
linha_lagoa_dos_patos=  which(mapa_rs_modelo$municipio=="lagoa dos patos")
linha_lagoa_mirin=  which(mapa_rs_modelo$municipio=="lagoa mirim")
mapa_rs_modelo  = mapa_rs_modelo[-c(linha_lagoa_dos_patos, linha_lagoa_mirin), ]
lista_completa <- list()
i = 7
banco_modelo <- gerar_banco_modelo_aux(i)
counts <- banco_modelo  %>%
select(1,3,5) %>%
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "nascidos_vivos_anomalia")
banco_modelo$municipio <- str_to_lower(banco_modelo$NOMEMUN)
banco_modelo_aux <- banco_modelo %>%
group_by(CODMUNRES) %>%
summarise(municipio = str_to_lower(unique(NOMEMUN)))
banco_modelo_mapa <-  banco_modelo_aux %>%
left_join(mapa_rs_modelo,by=c("municipio"))%>%
select(-3,-4)
banco_modelo_mapa <- banco_modelo_mapa %>%
arrange(CODMUNRES)
banco_modelo_mapa_sf  = st_as_sf(banco_modelo_mapa)
banco_modelo_mapa_sf  <- st_transform(banco_modelo_mapa_sf )
nb <- poly2nb(banco_modelo_mapa_sf)
nb2INLA("map.adj", nb)
g <- inla.read.graph(filename = localarquivo("modelagem/Scan/map.adj"))
proporcao_media <- banco_modelo %>%
group_by(ANO_NASC) %>%
summarise(valor = sum(nascidos_vivos_anomalia)/sum(numero_nascidos_vivos))
banco_modelo$valor_esperado <- banco_modelo$numero_nascidos_vivos*proporcao_media$valor[banco_modelo$ANO_NASC - 2009]
ebp_baselines <- banco_modelo  %>%
#df_to_matrix(value_col = "mu")
df_to_matrix(time_col = "ANO_NASC", location_col = "CODMUNRES", value_col = "valor_esperado")
set.seed(1)
poisson_result <- scan_eb_poisson(counts = counts,
zones = g$nbs , #max_duration = 3,
baselines = ebp_baselines,
n_mcsim = 9999)
print(poisson_result)
poisson_result$setting
conclusao <- print(poisson_result)
print(poisson_result)
conclusao$setting
View(conclusao)
runApp()
runApp()
shiny::runApp()
